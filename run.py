#!/usr/bin/env python3
"""
Script de lancement rapide pour l'outil de pentest Bluetooth
"""

import sys
import os
import subprocess

def check_root():
    """V√©rifier si on est root"""
    if os.geteuid() != 0:
        print("‚ö†Ô∏è  Cet outil n√©cessite des privil√®ges root pour fonctionner correctement.")
        print("   Relancez avec: sudo python3 run.py")
        return False
    return True

def check_dependencies():
    """V√©rifier les d√©pendances"""
    print("üîç V√©rification des d√©pendances...")
    
    # V√©rifier Python
    if sys.version_info < (3, 6):
        print("‚ùå Python 3.6+ requis")
        return False
    
    # V√©rifier les modules Python
    try:
        import PyQt5
        print("‚úÖ PyQt5")
    except ImportError:
        print("‚ùå PyQt5 non install√©. Installez avec: pip3 install PyQt5")
        return False
    
    # V√©rifier les outils syst√®me
    tools = ['hcitool', 'bluetoothctl']
    for tool in tools:
        try:
            subprocess.run([tool, '--help'], capture_output=True, check=False)
            print(f"‚úÖ {tool}")
        except FileNotFoundError:
            print(f"‚ùå {tool} non trouv√©")
            return False
    
    return True

def main():
    """Fonction principale"""
    print("üîµ Advanced Bluetooth Pentest Tool - Lancement rapide")
    print("=" * 50)
    
    # V√©rifications
    if not check_root():
        sys.exit(1)
    
    if not check_dependencies():
        print("\n‚ùå D√©pendances manquantes. Ex√©cutez d'abord: ./install.sh")
        sys.exit(1)
    
    print("\n‚úÖ Toutes les v√©rifications pass√©es!")
    print("üöÄ Lancement de l'interface graphique...")
    
    # Lancer l'application principale
    try:
        from main import main as app_main
        app_main()
    except ImportError as e:
        print(f"‚ùå Erreur d'import: {e}")
        print("   Assurez-vous que tous les modules sont install√©s.")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå Erreur lors du lancement: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
